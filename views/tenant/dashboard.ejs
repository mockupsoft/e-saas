<!DOCTYPE html>
<html lang="tr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= tenantName %> - Maƒüaza Dashboard</title>
    <link rel="stylesheet" href="/css/dashboard.css">
</head>
<body class="tenant">
    <div class="dashboard-layout">
        <%- include('../partials/tenant-navigation', { activePage: 'dashboard' }) %>
        
        <!-- Main Content -->
        <main class="main-content">
            <!-- Minimal Top Bar -->
            <header class="minimal-top-bar">
                <div class="header-left">
                    <h1 class="page-title">Dashboard</h1>
                    <div class="breadcrumb">
                        <span class="tenant-name"><%= tenantName %></span>
                        <span class="separator">/</span>
                        <span class="current-page">Maƒüaza Y√∂netimi</span>
                    </div>
                </div>
                <div class="header-right">
                    <!-- Notifications Bell -->
                    <div class="notification-bell" id="notificationBell">
                        <button class="bell-button" onclick="toggleNotifications()">
                            üîî
                            <span class="notification-badge" id="notificationBadge" style="display: none;">0</span>
                        </button>
                        
                        <!-- Notifications Dropdown -->
                        <div class="notification-dropdown" id="notificationDropdown" style="display: none;">
                            <div class="notification-header">
                                <h3>Bildirimler</h3>
                                <button class="mark-all-read-btn" onclick="markAllAsRead()" style="display: none;" id="markAllReadBtn">
                                    T√ºm√ºn√º Okundu ƒ∞≈üaretle
                                </button>
                            </div>
                            <div class="notification-list" id="notificationList">
                                <div class="notification-loading">Bildirimler y√ºkleniyor...</div>
                            </div>
                            <div class="notification-footer">
                                <a href="/<%= tenantDomain %>/notifications" class="view-all-link">T√ºm Bildirimleri G√∂r√ºnt√ºle</a>
                            </div>
                        </div>
                    </div>

                    <!-- User Info in Header -->
                    <% if (typeof currentUser !== 'undefined' && currentUser) { %>
                    <div class="header-user-info">
                        <div class="user-avatar-small">
                            <%= currentUser.role === 'admin' ? 'üëë' : currentUser.role === 'manager' ? 'üèÉ‚Äç‚ôÇÔ∏è' : 'üë§' %>
                        </div>
                        <div class="user-details-small">
                            <div class="user-name-small"><%= currentUser.name %></div>
                            <div class="user-role-small">
                                <span class="role-badge-small role-<%= currentUser.role %>">
                                    <%= currentUser.role === 'admin' ? 'Y√∂netici' : currentUser.role === 'manager' ? 'M√ºd√ºr' : 'G√∂r√ºnt√ºleyici' %>
                                </span>
                            </div>
                        </div>
                    </div>
                    <% } %>
                    
                    <a href="https://saas.apollo12.co/<%= tenantDomain %>/" target="_blank" class="store-link">
                        üåê Maƒüazayƒ± G√∂r√ºnt√ºle
                    </a>
                    <div class="timestamp">
                        <%= new Date().toLocaleString('tr-TR') %>
                    </div>
                    
                    <!-- Logout Button in Header -->
                    <% if (typeof currentUser !== 'undefined' && currentUser) { %>
                    <button onclick="logout()" class="logout-btn-header">
                        üö™ √áƒ±kƒ±≈ü
                    </button>
                    <% } %>
                    
                    <button class="mobile-menu-btn">‚ò∞</button>
                </div>
            </header>
            
            <!-- Dashboard Content -->
            <div class="content">
                <!-- Stats Grid -->
                <div class="stats-grid" style="margin-bottom: 2rem;">
                    <div class="stat-card">
                        <div class="stat-icon">üì¶</div>
                        <div class="stat-number"><%= stats.productCount %></div>
                        <div class="stat-label">Toplam √úr√ºn</div>
                    </div>
                    <div class="stat-card">
                        <div class="stat-icon">üìã</div>
                        <div class="stat-number"><%= stats.orderCount %></div>
                        <div class="stat-label">Toplam Sipari≈ü</div>
                    </div>
                    <div class="stat-card">
                        <div class="stat-icon">üí∞</div>
                        <div class="stat-number">‚Ç∫<%= stats.totalRevenue.toLocaleString('tr-TR') %></div>
                        <div class="stat-label">Toplam Ciro</div>
                    </div>
                    <div class="stat-card">
                        <div class="stat-icon">üìà</div>
                        <div class="stat-number">+<%= Math.floor(Math.random() * 25) + 5 %>%</div>
                        <div class="stat-label">Bu Ay B√ºy√ºme</div>
                    </div>
                </div>
                
                <!-- Store Info Card -->
                <div class="dashboard-card info-card">
                    <div class="card-header">
                        <h3 class="card-title">üè∑Ô∏è Maƒüaza Bilgileri</h3>
                    </div>
                    <div class="card-content">
                        <div class="info-grid">
                            <div class="info-item">
                                <span class="info-label">Maƒüaza Adƒ±:</span>
                                <span class="info-value"><%= tenantName %></span>
                            </div>
                            <div class="info-item">
                                <span class="info-label">Domain:</span>
                                <a href="https://saas.apollo12.co/<%= tenantDomain %>/" target="_blank" class="info-value link">
                                    saas.apollo12.co/<%= tenantDomain %>
                                </a>
                            </div>
                            <div class="info-item">
                                <span class="info-label">Durum:</span>
                                <span class="info-value status active"><%= tenantStatus %></span>
                            </div>
                            <div class="info-item">
                                <span class="info-label">Olu≈üturma Tarihi:</span>
                                <span class="info-value"><%= new Date(tenantCreatedAt).toLocaleDateString('tr-TR') %></span>
                            </div>
                        </div>
                    </div>
                </div>
                
                <!-- Recent Activity (Simulated) -->
                <div class="dashboard-card activity-card">
                    <div class="card-header">
                        <h3 class="card-title">üìä Son Aktivite</h3>
                    </div>
                    <div class="card-content">
                        <div class="activity-list">
                            <div class="activity-item">
                                <span class="activity-text">Bug√ºn Sipari≈ü</span>
                                <span class="activity-value success"><%= Math.floor(Math.random() * 12) + 1 %></span>
                            </div>
                            <div class="activity-item">
                                <span class="activity-text">Bekleyen Sipari≈üler</span>
                                <span class="activity-value warning"><%= Math.floor(Math.random() * 8) + 2 %></span>
                            </div>
                            <div class="activity-item">
                                <span class="activity-text">Yeni M√º≈üteriler</span>
                                <span class="activity-value info"><%= Math.floor(Math.random() * 15) + 3 %></span>
                            </div>
                            <div class="activity-item">
                                <span class="activity-text">Stokta Kalmayan</span>
                                <span class="activity-value <%= Math.random() > 0.5 ? 'warning' : 'success' %>"><%= Math.floor(Math.random() * 5) %></span>
                            </div>
                        </div>
                    </div>
                </div>
                
                <!-- Quick Actions -->
                <div class="action-links">
                    <% if (typeof userRole === 'undefined' || !userRole || userRole === 'admin' || userRole === 'manager') { %>
                    <a href="/<%= tenantDomain %>/products" class="action-link">
                        <div class="action-icon">üì¶</div>
                        <div class="action-content">
                            <div class="action-title">√úr√ºn Y√∂netimi</div>
                            <div class="action-description">√úr√ºn ekle, d√ºzenle ve stok y√∂net</div>
                        </div>
                    </a>
                    <% } %>
                    
                    <a href="/<%= tenantDomain %>/orders" class="action-link">
                        <div class="action-icon">üìã</div>
                        <div class="action-content">
                            <div class="action-title">Sipari≈ü Y√∂netimi</div>
                            <div class="action-description">Sipari≈üleri takip et ve y√∂net</div>
                        </div>
                    </a>
                    
                    <a href="/<%= tenantDomain %>/customers" class="action-link">
                        <div class="action-icon">üë•</div>
                        <div class="action-content">
                            <div class="action-title">M√º≈üteri Y√∂netimi</div>
                            <div class="action-description">M√º≈üteri verilerini g√∂r√ºnt√ºle ve y√∂net</div>
                        </div>
                    </a>
                    
                    <a href="/<%= tenantDomain %>/categories" class="action-link">
                        <div class="action-icon">üìÅ</div>
                        <div class="action-content">
                            <div class="action-title">Kategori Y√∂netimi</div>
                            <div class="action-description">√úr√ºn kategorilerini d√ºzenle ve y√∂net</div>
                        </div>
                    </a>
                    
                    <% if (typeof userRole === 'undefined' || !userRole || userRole === 'admin' || userRole === 'manager') { %>
                    <a href="/<%= tenantDomain %>/affiliates" class="action-link">
                        <div class="action-icon">ü§ù</div>
                        <div class="action-content">
                            <div class="action-title">Affiliate Sistemi</div>
                            <div class="action-description">Referans kodlarƒ± ve komisyon y√∂netimi</div>
                        </div>
                    </a>
                    <% } %>
                    
                    <a href="/<%= tenantDomain %>/reports" class="action-link">
                        <div class="action-icon">üìä</div>
                        <div class="action-content">
                            <div class="action-title">Analytics</div>
                            <div class="action-description">Satƒ±≈ü raporlarƒ± ve istatistikler</div>
                        </div>
                    </a>
                    
                    <% if (typeof userRole === 'undefined' || !userRole || userRole === 'admin') { %>
                    <a href="/<%= tenantDomain %>/themes" class="action-link">
                        <div class="action-icon">üé®</div>
                        <div class="action-content">
                            <div class="action-title">Tema Ayarlarƒ±</div>
                            <div class="action-description">Maƒüaza g√∂r√ºn√ºm√ºn√º √∂zelle≈ütir</div>
                        </div>
                    </a>
                    
                    <a href="/<%= tenantDomain %>/settings" class="action-link">
                        <div class="action-icon">‚öôÔ∏è</div>
                        <div class="action-content">
                            <div class="action-title">Genel Ayarlar</div>
                            <div class="action-description">Maƒüaza ayarlarƒ±nƒ± yapƒ±landƒ±r</div>
                        </div>
                    </a>
                    <% } %>
                </div>
            </div>

            <!-- Overlay for mobile -->
            <div class="overlay"></div>
        </main>
    </div>

    <!-- Minimal Header Styles -->
    <style>
    .minimal-top-bar {
        display: flex;
        align-items: center;
        justify-content: space-between;
        padding: 1rem 1.5rem;
        background: rgba(255, 255, 255, 0.9);
        backdrop-filter: blur(10px);
        border-bottom: 1px solid #e5e7eb;
        margin-bottom: 1.5rem;
        border-radius: 12px;
        margin: 1rem;
        box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.1);
    }

    .header-left {
        display: flex;
        align-items: center;
        gap: 1rem;
    }

    .header-right {
        display: flex;
        align-items: center;
        gap: 1rem;
    }

    .page-title {
        font-size: 1.5rem;
        font-weight: 700;
        color: #1f2937;
        margin: 0;
    }

    .breadcrumb {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        font-size: 0.875rem;
        color: #6b7280;
    }

    .tenant-name {
        color: #3b82f6;
        font-weight: 500;
    }

    .separator {
        color: #d1d5db;
    }

    .current-page {
        color: #6b7280;
    }

    .store-link {
        color: #10b981;
        text-decoration: none;
        font-size: 0.875rem;
        font-weight: 500;
        padding: 0.5rem 0.75rem;
        border-radius: 8px;
        transition: background-color 0.2s;
    }

    .store-link:hover {
        background: rgba(16, 185, 129, 0.1);
    }

    .timestamp {
        color: #6b7280;
        font-size: 0.75rem;
        padding: 0.5rem 0.75rem;
        background: #f9fafb;
        border-radius: 6px;
    }

    .info-card .card-content {
        padding: 1.5rem;
    }

    .info-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
        gap: 1rem;
    }

    .info-item {
        display: flex;
        flex-direction: column;
        gap: 0.25rem;
    }

    .info-label {
        font-size: 0.875rem;
        color: #6b7280;
        font-weight: 500;
    }

    .info-value {
        font-size: 1rem;
        color: #1f2937;
        font-weight: 600;
    }

    .info-value.link {
        color: #10b981;
        text-decoration: none;
    }

    .info-value.link:hover {
        text-decoration: underline;
    }

    .info-value.status.active {
        color: #10b981;
        text-transform: uppercase;
        font-size: 0.875rem;
    }

    .activity-card .card-content {
        padding: 1.5rem;
    }

    .activity-list {
        display: grid;
        gap: 0.75rem;
    }

    .activity-item {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 0.75rem 0;
        border-bottom: 1px solid #f3f4f6;
    }

    .activity-item:last-child {
        border-bottom: none;
    }

    .activity-text {
        color: #374151;
        font-weight: 500;
    }

    .activity-value {
        font-weight: 600;
        padding: 0.25rem 0.5rem;
        border-radius: 4px;
        font-size: 0.875rem;
    }

    .activity-value.success {
        color: #059669;
        background: rgba(5, 150, 105, 0.1);
    }

    .activity-value.warning {
        color: #d97706;
        background: rgba(217, 119, 6, 0.1);
    }

    .activity-value.info {
        color: #3b82f6;
        background: rgba(59, 130, 246, 0.1);
    }

    /* New styles for header user info */
    .header-user-info {
        display: flex;
        align-items: center;
        gap: 0.75rem;
        padding: 0.5rem 0.75rem;
        background: #f3f4f6;
        border-radius: 8px;
    }

    .user-avatar-small {
        font-size: 1.25rem;
        color: #4b5563;
    }

    .user-details-small {
        display: flex;
        flex-direction: column;
    }

    .user-name-small {
        font-size: 0.875rem;
        font-weight: 600;
        color: #1f2937;
    }

    .user-role-small {
        display: flex;
        align-items: center;
        gap: 0.5rem;
    }

    .role-badge-small {
        font-size: 0.75rem;
        font-weight: 500;
        padding: 0.25rem 0.5rem;
        border-radius: 6px;
    }

    .role-badge-small.role-admin {
        background-color: #e0f2fe;
        color: #1d4ed8;
    }

    .role-badge-small.role-manager {
        background-color: #fef3c7;
        color: #d97706;
    }

    .role-badge-small.role-viewer {
        background-color: #e0f2fe;
        color: #1d4ed8;
    }

    .logout-btn-header {
        color: #ef4444;
        font-size: 0.875rem;
        font-weight: 500;
        padding: 0.5rem 0.75rem;
        border-radius: 8px;
        background: rgba(239, 68, 68, 0.1);
        border: none;
        cursor: pointer;
        transition: background-color 0.2s;
    }

    .logout-btn-header:hover {
        background: rgba(239, 68, 68, 0.2);
    }

    /* Notification Bell Styles */
    .notification-bell {
        position: relative;
        display: inline-block;
    }

    .bell-button {
        background: none;
        border: none;
        cursor: pointer;
        font-size: 1.5rem;
        padding: 0.5rem;
        border-radius: 8px;
        transition: all 0.2s ease;
        position: relative;
    }

    .bell-button:hover {
        background: rgba(59, 130, 246, 0.1);
    }

    .notification-badge {
        position: absolute;
        top: -2px;
        right: -2px;
        background: #ef4444;
        color: white;
        border-radius: 50%;
        padding: 2px 6px;
        font-size: 0.75rem;
        font-weight: 600;
        min-width: 18px;
        height: 18px;
        display: flex;
        align-items: center;
        justify-content: center;
        line-height: 1;
    }

    .notification-dropdown {
        position: absolute;
        top: 100%;
        right: 0;
        width: 320px;
        max-height: 400px;
        background: white;
        border: 1px solid #e5e7eb;
        border-radius: 12px;
        box-shadow: 0 10px 25px rgba(0, 0, 0, 0.15);
        z-index: 1000;
        overflow: hidden;
    }

    .notification-header {
        padding: 1rem;
        border-bottom: 1px solid #f3f4f6;
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .notification-header h3 {
        margin: 0;
        font-size: 1rem;
        font-weight: 600;
        color: #1f2937;
    }

    .mark-all-read-btn {
        background: none;
        border: none;
        color: #3b82f6;
        font-size: 0.75rem;
        cursor: pointer;
        padding: 0.25rem 0.5rem;
        border-radius: 4px;
        transition: background-color 0.2s;
    }

    .mark-all-read-btn:hover {
        background: rgba(59, 130, 246, 0.1);
    }

    .notification-list {
        max-height: 250px;
        overflow-y: auto;
    }

    .notification-item {
        padding: 0.75rem 1rem;
        border-bottom: 1px solid #f9fafb;
        cursor: pointer;
        transition: background-color 0.2s;
        display: flex;
        align-items: flex-start;
        gap: 0.75rem;
    }

    .notification-item:hover {
        background: #f9fafb;
    }

    .notification-item.unread {
        background: #eff6ff;
    }

    .notification-item.unread:hover {
        background: #dbeafe;
    }

    .notification-icon {
        font-size: 1.25rem;
        margin-top: 0.125rem;
    }

    .notification-content {
        flex: 1;
        min-width: 0;
    }

    .notification-title {
        font-weight: 600;
        color: #1f2937;
        font-size: 0.875rem;
        margin-bottom: 0.25rem;
        line-height: 1.3;
    }

    .notification-message {
        color: #6b7280;
        font-size: 0.75rem;
        line-height: 1.4;
        margin-bottom: 0.25rem;
    }

    .notification-time {
        color: #9ca3af;
        font-size: 0.625rem;
    }

    .notification-loading {
        padding: 2rem;
        text-align: center;
        color: #6b7280;
        font-size: 0.875rem;
    }

    .notification-empty {
        padding: 2rem;
        text-align: center;
        color: #6b7280;
        font-size: 0.875rem;
    }

    .notification-footer {
        padding: 0.75rem 1rem;
        border-top: 1px solid #f3f4f6;
        text-align: center;
    }

    .view-all-link {
        color: #3b82f6;
        text-decoration: none;
        font-size: 0.875rem;
        font-weight: 500;
    }

    .view-all-link:hover {
        text-decoration: underline;
    }

    .notification-type-badge {
        padding: 0.125rem 0.375rem;
        border-radius: 9999px;
        font-size: 0.625rem;
        font-weight: 500;
        text-transform: uppercase;
        letter-spacing: 0.05em;
    }

    .notification-type-success {
        background: #dcfce7;
        color: #166534;
    }

    .notification-type-info {
        background: #dbeafe;
        color: #1e40af;
    }

    .notification-type-warning {
        background: #fef3c7;
        color: #92400e;
    }

    .notification-type-danger {
        background: #fee2e2;
        color: #991b1b;
    }

    @media (max-width: 768px) {
        .minimal-top-bar {
            flex-direction: column;
            gap: 1rem;
            align-items: stretch;
        }

        .header-left, .header-right {
            justify-content: space-between;
        }

        .breadcrumb {
            order: 1;
        }

        .notification-dropdown {
            width: 280px;
            right: -50px;
        }
    }
    </style>

    <script src="/js/dashboard.js"></script>
    
    <script>
    // Notification functionality
    let isNotificationDropdownOpen = false;
    let notificationsCache = null;
    let unreadCount = 0;

    // Initialize notifications when page loads
    document.addEventListener('DOMContentLoaded', function() {
        loadNotificationCount();
        // Auto-refresh notifications every 30 seconds
        setInterval(loadNotificationCount, 30000);
    });

    // Toggle notification dropdown
    function toggleNotifications() {
        const dropdown = document.getElementById('notificationDropdown');
        
        if (isNotificationDropdownOpen) {
            dropdown.style.display = 'none';
            isNotificationDropdownOpen = false;
        } else {
            dropdown.style.display = 'block';
            isNotificationDropdownOpen = true;
            loadNotifications();
        }
    }

    // Close dropdown when clicking outside
    document.addEventListener('click', function(event) {
        const bell = document.getElementById('notificationBell');
        if (isNotificationDropdownOpen && !bell.contains(event.target)) {
            document.getElementById('notificationDropdown').style.display = 'none';
            isNotificationDropdownOpen = false;
        }
    });

    // Load notification count only
    async function loadNotificationCount() {
        try {
            const response = await fetch('/<%= tenantDomain %>/api/notifications/count');
            const data = await response.json();
            
            if (data.success) {
                updateNotificationBadge(data.data.unread_count);
            }
        } catch (error) {
            console.error('Bildirim sayƒ±sƒ± y√ºkleme hatasƒ±:', error);
        }
    }

    // Load full notifications
    async function loadNotifications() {
        const listElement = document.getElementById('notificationList');
        listElement.innerHTML = '<div class="notification-loading">Bildirimler y√ºkleniyor...</div>';

        try {
            const response = await fetch('/<%= tenantDomain %>/api/notifications');
            const data = await response.json();
            
            if (data.success) {
                displayNotifications(data.data.notifications);
                updateNotificationBadge(data.data.unread_count);
                
                // Show mark all as read button if there are unread notifications
                const markAllBtn = document.getElementById('markAllReadBtn');
                if (data.data.unread_count > 0) {
                    markAllBtn.style.display = 'block';
                } else {
                    markAllBtn.style.display = 'none';
                }
            } else {
                listElement.innerHTML = '<div class="notification-empty">Bildirimler y√ºklenemedi</div>';
            }
        } catch (error) {
            console.error('Bildirim y√ºkleme hatasƒ±:', error);
            listElement.innerHTML = '<div class="notification-empty">Bildirimler y√ºklenemedi</div>';
        }
    }

    // Display notifications in the dropdown
    function displayNotifications(notifications) {
        const listElement = document.getElementById('notificationList');
        
        if (notifications.length === 0) {
            listElement.innerHTML = '<div class="notification-empty">Hen√ºz bildirim yok</div>';
            return;
        }

        const notificationItems = notifications.map(notification => {
            const timeAgo = getTimeAgo(notification.created_at);
            const isUnread = !notification.is_read;
            
            return `
                <div class="notification-item ${isUnread ? 'unread' : ''}" onclick="markNotificationAsRead(${notification.id})">
                    <div class="notification-icon">${notification.icon}</div>
                    <div class="notification-content">
                        <div class="notification-title">${escapeHtml(notification.title)}</div>
                        <div class="notification-message">${escapeHtml(notification.message)}</div>
                        <div class="notification-time">${timeAgo}</div>
                    </div>
                </div>
            `;
        });

        listElement.innerHTML = notificationItems.join('');
    }

    // Update notification badge
    function updateNotificationBadge(count) {
        const badge = document.getElementById('notificationBadge');
        unreadCount = count;
        
        if (count > 0) {
            badge.textContent = count > 99 ? '99+' : count;
            badge.style.display = 'flex';
        } else {
            badge.style.display = 'none';
        }
    }

    // Mark a specific notification as read
    async function markNotificationAsRead(notificationId) {
        try {
            const response = await fetch(`/<%= tenantDomain %>/api/notifications/${notificationId}/read`, {
                method: 'PUT',
                headers: {
                    'Content-Type': 'application/json'
                }
            });
            
            const data = await response.json();
            if (data.success) {
                updateNotificationBadge(data.data.unread_count);
                // Reload notifications to update the UI
                if (isNotificationDropdownOpen) {
                    loadNotifications();
                }
            }
        } catch (error) {
            console.error('Bildirim okundu i≈üaretleme hatasƒ±:', error);
        }
    }

    // Mark all notifications as read
    async function markAllAsRead() {
        try {
            const response = await fetch('/<%= tenantDomain %>/api/notifications/mark-all-read', {
                method: 'PUT',
                headers: {
                    'Content-Type': 'application/json'
                }
            });
            
            const data = await response.json();
            if (data.success) {
                updateNotificationBadge(0);
                document.getElementById('markAllReadBtn').style.display = 'none';
                // Reload notifications to update the UI
                if (isNotificationDropdownOpen) {
                    loadNotifications();
                }
            }
        } catch (error) {
            console.error('T√ºm bildirimleri okundu i≈üaretleme hatasƒ±:', error);
        }
    }

    // Helper function to escape HTML
    function escapeHtml(text) {
        const div = document.createElement('div');
        div.textContent = text;
        return div.innerHTML;
    }

    // Helper function to calculate time ago
    function getTimeAgo(dateString) {
        const now = new Date();
        const past = new Date(dateString);
        const diffInSeconds = Math.floor((now - past) / 1000);
        
        if (diffInSeconds < 60) {
            return 'Az √∂nce';
        } else if (diffInSeconds < 3600) {
            const minutes = Math.floor(diffInSeconds / 60);
            return `${minutes} dakika √∂nce`;
        } else if (diffInSeconds < 86400) {
            const hours = Math.floor(diffInSeconds / 3600);
            return `${hours} saat √∂nce`;
        } else {
            const days = Math.floor(diffInSeconds / 86400);
            return `${days} g√ºn √∂nce`;
        }
    }
    </script>
</body>
</html> 