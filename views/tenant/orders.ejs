<!DOCTYPE html>
<html lang="tr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= typeof tenantName !== 'undefined' ? tenantName : 'Tenant' %> - Sipariş Yönetimi</title>
    <link rel="stylesheet" href="/css/dashboard.css">
    <link rel="stylesheet" href="/css/components.css">
    <link rel="stylesheet" href="/css/date-range-fix.css">
    <script src="https://unpkg.com/htmx.org@1.9.12"></script>
</head>
<body class="tenant">
    <div class="dashboard-layout">
        <%- include('../partials/tenant-navigation', { activePage: 'orders' }) %>

        <!-- Main Content -->
        <main class="main-content">
            <!-- Top Bar -->
            <header class="top-bar">
                <h1 class="page-title">📋 Sipariş Yönetimi</h1>
                <div class="top-bar-actions">
                    <button class="btn btn-primary" onclick="openModal('createOrderModal')">
                        ➕ Yeni Sipariş
                    </button>
                    <button class="mobile-menu-btn">☰</button>
                </div>
            </header>

            <!-- Content -->
            <div class="content">
                <!-- Filter Bar -->
                <%
                // Tenant değişkenlerini güvenli şekilde kullan
                const safeTenantName = typeof tenantName !== 'undefined' ? tenantName : 'tenant';
                const safeTenantDomain = typeof tenantDomain !== 'undefined' ? tenantDomain : 'tenant';
                const ordersFilterHxGet = '/' + safeTenantDomain + '/api/orders';
                %>
                <%- include('../partials/components/filter-bar', {
                    id: 'ordersFilter',
                    fields: [
                        {
                            type: 'text',
                            name: 'q',
                            label: 'Müşteri Ara',
                            placeholder: 'Müşteri adı ara...',
                            value: ''
                        },
                        {
                            type: 'select',
                            name: 'status',
                            label: 'Durum',
                            placeholder: 'Tümü',
                            options: [
                                { value: '', text: 'Tümü' },
                                { value: 'pending', text: 'Beklemede' },
                                { value: 'paid', text: 'Ödendi' },
                                { value: 'processing', text: 'İşleniyor' },
                                { value: 'shipped', text: 'Kargoda' },
                                { value: 'delivered', text: 'Teslim Edildi' },
                                { value: 'cancelled', text: 'İptal Edildi' }
                            ],
                            value: ''
                        },
                        {
                            type: 'date-range',
                            name: 'created',
                            label: 'Tarih Aralığı'
                        }
                    ],
                    hxGet: ordersFilterHxGet,
                    hxTarget: '#ordersTableWrapper'
                }) %>

                <!-- Orders Table -->
                <%
                const ordersTableLoadUrl = '/' + safeTenantDomain + '/api/orders';
                %>
                <%- include('../partials/components/table', {
                    id: 'ordersTable',
                    headers: [
                        { text: 'Sipariş #', key: 'order_no', sortable: true },
                        { text: 'Müşteri', key: 'customer_name', sortable: true },
                        { text: 'Tutar', key: 'total', sortable: true },
                        { text: 'Durum', key: 'status', sortable: true },
                        { text: 'Tarih', key: 'created_at', sortable: true }
                    ],
                    actions: [
                        { icon: '👁️', text: 'Görüntüle', action: 'view-order', class: 'btn-outline', dataKey: 'id', dataValue: 'id' },
                        { icon: '✏️', text: 'Durum Değiştir', action: 'update-status', class: 'btn-outline', dataKey: 'id', dataValue: 'id' }
                    ],
                    loadUrl: ordersTableLoadUrl,
                    emptyMessage: 'Henüz sipariş bulunmuyor',
                    searchable: false,
                    sortable: true,
                    searchable: true,
                    paginated: true
                }) %>
            </div>
        </main>
    </div>

    <!-- View Order Modal -->
    <div id="viewOrderModal" class="modal">
        <div class="modal-backdrop" onclick="closeModal('viewOrderModal')"></div>
        <div class="modal-content modal-lg">
            <div class="modal-header">
                <h3 class="modal-title">Sipariş Detayları</h3>
                <button class="modal-close" onclick="closeModal('viewOrderModal')">✕</button>
            </div>
            <div class="modal-body">
                <div id="viewOrderContent">
                    <div class="loading-spinner">
                        <div class="spinner"></div>
                        <p>Yükleniyor...</p>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-outline" onclick="closeModal('viewOrderModal')">Kapat</button>
            </div>
        </div>
    </div>

    <!-- Update Status Modal -->
    <div class="modal" id="updateStatusModal">
        <div class="modal-backdrop" onclick="closeModal('updateStatusModal')"></div>
        <div class="modal-content modal-sm">
            <div class="modal-header">
                <h3 class="modal-title">Sipariş Durumu Güncelle</h3>
                <button class="modal-close" onclick="closeModal('updateStatusModal')">✕</button>
            </div>
            <%
            const updateStatusBaseUrl = '/' + tenantDomain + '/api/orders';
            %>
            <form id="updateStatusModalForm" 
                  hx-put="<%= updateStatusBaseUrl %>/:id/status" 
                  hx-target="#ordersTableWrapper"
                  hx-swap="outerHTML"
                  hx-indicator="#updateStatusModalLoading">
                <div class="modal-body">
                    <div class="modal-content-wrapper" id="updateStatusModalContent">
                        <%- include('../partials/components/form-group', {
                            type: 'select',
                            name: 'status',
                            label: 'Yeni Durum',
                            required: true,
                            options: [
                                { value: 'pending', text: 'Beklemede' },
                                { value: 'paid', text: 'Ödendi' },
                                { value: 'processing', text: 'İşleniyor' },
                                { value: 'shipped', text: 'Kargoda' },
                                { value: 'delivered', text: 'Teslim Edildi' },
                                { value: 'cancelled', text: 'İptal Edildi' }
                            ]
                        }) %>
                    </div>
                    <div id="updateStatusModalLoading" class="htmx-indicator modal-loading">
                        <div class="spinner"></div>
                        <p>İşleniyor...</p>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-outline" onclick="closeModal('updateStatusModal')">İptal</button>
                    <button type="submit" class="btn btn-primary">Güncelle</button>
                </div>
            </form>
        </div>
    </div>

    <!-- Create Order Modal -->
    <div class="modal" id="createOrderModal">
        <div class="modal-backdrop" onclick="closeModal('createOrderModal')"></div>
        <div class="modal-content modal-lg">
            <div class="modal-header">
                <h3 class="modal-title">Yeni Sipariş Oluştur</h3>
                <button class="modal-close" onclick="closeModal('createOrderModal')">✕</button>
            </div>
            
            <form id="createOrderModalForm" 
                  hx-post="/<%- safeTenantDomain %>/api/orders"
                  hx-swap="none"
                  hx-indicator="#createOrderModalLoading">
                <div class="modal-body">
                    <div class="modal-content-wrapper" id="createOrderModalContent">
                        <%- include('../partials/components/form-group', {
                            type: 'text',
                            name: 'customer_name',
                            label: 'Müşteri Adı',
                            required: true,
                            placeholder: 'Müşteri adını girin'
                        }) %>
                        
                        <%- include('../partials/components/form-group', {
                            type: 'email',
                            name: 'customer_email',
                            label: 'Müşteri E-posta',
                            required: true,
                            placeholder: 'ornek@email.com'
                        }) %>
                        
                        <%- include('../partials/components/form-group', {
                            type: 'tel',
                            name: 'customer_phone',
                            label: 'Müşteri Telefon',
                            placeholder: '+90 555 000 00 00'
                        }) %>
                        
                        <%- include('../partials/components/form-group', {
                            type: 'number',
                            name: 'total_amount',
                            label: 'Toplam Tutar',
                            required: true,
                            placeholder: '0.00',
                            attributes: {
                                step: '0.01',
                                min: '0'
                            }
                        }) %>
                        
                        <%- include('../partials/components/form-group', {
                            type: 'select',
                            name: 'status',
                            label: 'Sipariş Durumu',
                            options: [
                                { value: 'pending', text: 'Beklemede' },
                                { value: 'confirmed', text: 'Onaylandı' },
                                { value: 'processing', text: 'Hazırlanıyor' },
                                { value: 'shipped', text: 'Kargoda' },
                                { value: 'delivered', text: 'Teslim Edildi' }
                            ],
                            value: 'pending'
                        }) %>
                        
                        <%- include('../partials/components/form-group', {
                            type: 'textarea',
                            name: 'notes',
                            label: 'Sipariş Notları',
                            placeholder: 'Sipariş ile ilgili notlar...'
                        }) %>
                    </div>
                    <div id="createOrderModalLoading" class="htmx-indicator modal-loading">
                        <div class="spinner"></div>
                        <p>Sipariş oluşturuluyor...</p>
                    </div>
                </div>
                
                <div class="modal-footer">
                    <button type="button" class="btn btn-outline" onclick="closeModal('createOrderModal')">İptal</button>
                    <button type="submit" class="btn btn-primary">Sipariş Oluştur</button>
                </div>
            </form>
        </div>
    </div>

    <script src="/js/dashboard.js"></script>
    <script src="/js/ui.js"></script>
    <script src="/js/toast.js"></script>
    <script src="/js/table-force-reload.js"></script>
    <script src="/js/modal-fix.js"></script>
    <link rel="stylesheet" href="/css/modal-force-fix.css">
    <link rel="stylesheet" href="/css/toast.css">
    <script>
        // Order management functions
        window.viewOrder = async function(orderId) {
            try {
                const response = await fetch(`/<%= tenantDomain %>/api/orders/${orderId}`);
                const result = await response.json();
                
                if (result.success && result.data.order) {
                    const order = result.data.order;
                    const content = document.getElementById('viewOrderContent');
                    
                    content.innerHTML = `
                        <div style="display: grid; gap: 1.5rem;">
                            <div>
                                <h4 style="margin-bottom: 0.5rem; color: var(--gray-700);">Sipariş Bilgileri</h4>
                                <div style="background: var(--gray-50); padding: 1rem; border-radius: 6px;">
                                    <p><strong>Sipariş #:</strong> ${order.order_no || 'ORD-' + order.id}</p>
                                    <p><strong>Durum:</strong> <span class="status-badge status-${order.status}">${order.status}</span></p>
                                    <p><strong>Tarih:</strong> ${new Date(order.created_at).toLocaleString('tr-TR')}</p>
                                    <p><strong>Tutar:</strong> ₺${Number(order.total_amount || order.total || 0).toFixed(2)}</p>
                                </div>
                            </div>
                            
                            <div>
                                <h4 style="margin-bottom: 0.5rem; color: var(--gray-700);">Müşteri Bilgileri</h4>
                                <div style="background: var(--gray-50); padding: 1rem; border-radius: 6px;">
                                    <p><strong>Ad:</strong> ${order.customer_name || '-'}</p>
                                    <p><strong>Email:</strong> ${order.customer_email || '-'}</p>
                                </div>
                            </div>
                            
                            ${order.invoice_type ? `
                            <div>
                                <h4 style="margin-bottom: 0.5rem; color: var(--gray-700);">Fatura Bilgileri</h4>
                                <div style="background: var(--gray-50); padding: 1rem; border-radius: 6px;">
                                    <p><strong>Tip:</strong> ${order.invoice_type}</p>
                                    ${order.invoice_title ? `<p><strong>Ünvan:</strong> ${order.invoice_title}</p>` : ''}
                                    ${order.tax_number ? `<p><strong>Vergi No:</strong> ${order.tax_number}</p>` : ''}
                                </div>
                            </div>
                            ` : ''}
                            
                            ${order.shipping_company ? `
                            <div>
                                <h4 style="margin-bottom: 0.5rem; color: var(--gray-700);">Kargo Bilgileri</h4>
                                <div style="background: var(--gray-50); padding: 1rem; border-radius: 6px;">
                                    <p><strong>Kargo Şirketi:</strong> ${order.shipping_company}</p>
                                    ${order.tracking_number ? `<p><strong>Takip No:</strong> ${order.tracking_number}</p>` : ''}
                                    ${order.estimated_delivery ? `<p><strong>Tahmini Teslimat:</strong> ${new Date(order.estimated_delivery).toLocaleDateString('tr-TR')}</p>` : ''}
                                </div>
                            </div>
                            ` : ''}
                        </div>
                    `;
                    
                    openModal('viewOrderModal');
                } else {
                    showToast('Sipariş bilgileri alınamadı', 'error');
                }
            } catch (error) {
                console.error('View order error:', error);
                showToast('Bağlantı hatası', 'error');
            }
        };

        window.updateOrderStatus = function(orderId) {
            const updateForm = document.getElementById('updateStatusModalForm');
            if (updateForm) {
                updateForm.setAttribute('hx-put', `/${tenantDomainValue}/api/orders/${orderId}/status`);
                openModal('updateStatusModal');
            }
        };

        // HTMX event listeners
        document.body.addEventListener('htmx:afterRequest', function(event) {
            if (event.detail.target.id === 'ordersTableWrapper' || 
                event.detail.target.closest('#ordersTableWrapper')) {
                closeModal('updateStatusModal');
                closeModal('createOrderModal');
                
                // Check if response is JSON or HTML
                const responseText = event.detail.xhr.response || '';
                if (responseText.startsWith('{') && responseText.endsWith('}')) {
                    try {
                        const response = JSON.parse(responseText);
                        if (response.success) {
                            showToast(response.message || 'İşlem başarılı', 'success');
                        }
                    } catch (e) {
                        // Ignore JSON parse errors for HTML responses
                    }
                }
            }
        });

        // Row action handlers
        document.addEventListener('click', function(e) {
            if (e.target.closest('[data-action="view-order"]')) {
                const button = e.target.closest('[data-action="view-order"]');
                const orderId = button.dataset.id;
                if (orderId) {
                    viewOrder(orderId);
                }
            }
            
            if (e.target.closest('[data-action="update-status"]')) {
                const button = e.target.closest('[data-action="update-status"]');
                const orderId = button.dataset.id;
                if (orderId) {
                    updateOrderStatus(orderId);
                }
            }
        });
    </script>
</body>
</html>
